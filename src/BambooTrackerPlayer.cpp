/* BambooTrackerPlayer - Godot GDExtension which plays .BTM files with YM2608 emulation
 * Maxim Hoxha 2024
 * The actual player node, make sure to only use one of these at any time, consider making this an autoload
 */

#include "BambooTrackerPlayer.h"
#include <godot_cpp/core/class_db.hpp>
#include <godot_cpp/variant/packed_vector2_array.hpp>
#include <godot_cpp/variant/vector2.hpp>

using namespace godot;

void BambooTrackerPlayer::_bind_methods()
{
    ClassDB::bind_method(D_METHOD("getModule"), &BambooTrackerPlayer::getModule);
    ClassDB::bind_method(D_METHOD("setModule", "mod"), &BambooTrackerPlayer::setModule);
    ClassDB::add_property("BambooTrackerPlayer", PropertyInfo(Variant::OBJECT, "module", PropertyHint::PROPERTY_HINT_RESOURCE_TYPE, "BambooTrackerModule"), "setModule", "getModule");
}

BambooTrackerPlayer::BambooTrackerPlayer()
{
    //Create a nice audio stream so that we can push samples generated by our player for Godot to use
    outStream = Ref<AudioStreamGenerator>(new AudioStreamGenerator());
    outStream->set_mix_rate(55466);
    outStream->set_buffer_length(0.05);
    set_stream(outStream);
}

BambooTrackerPlayer::~BambooTrackerPlayer()
{

}

void BambooTrackerPlayer::_process(double delta)
{

}

void BambooTrackerPlayer::_ready()
{
    play();
    playback = get_stream_playback();
    PackedVector2Array emptyPush = PackedVector2Array();
    emptyPush.resize(256);
    emptyPush.fill(Vector2(0.0, 0.0));
    playback->push_buffer(emptyPush);
}

void BambooTrackerPlayer::setModule(const Ref<BambooTrackerModule> &mod)
{
    module = mod;
}

Ref<BambooTrackerModule> BambooTrackerPlayer::getModule() const
{
    return module;
}

void BambooTrackerPlayer::PlaySong(int64_t songNum)
{

}
